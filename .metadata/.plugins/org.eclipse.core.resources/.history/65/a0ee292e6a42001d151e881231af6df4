

// Imports the LinkedList Library
import java.util.LinkedList;

public class ActivtyLinkedList {
	public static void main(String[] Jeyym) {		
//		Declaration and Initialization of LinkedList
		LinkedList<String> myList = new LinkedList<>();
//		Adds an item/element at the end of the list.
		myList.addLast("Sam");
//		Adds another item/element at the end and in continuation of the list.
		myList.addLast("Espino");
//		Adds the third item/element at the end and in continuation of the list.
		myList.addLast("ITE201");
		
//		Adds an item/element at the start/beginning of the list,
//		moving the existing elements after the added item.
		myList.addFirst("ITE203");
		
//		Removes the 4th element or the item located in index 3
//		which is "ITE201"
		myList.remove(3);
		
//		Displays all the remaining items inside of a pair of box braces.
//		[ITE203, Sam, Espino]
		System.out.println(myList);
		
//		This line clears/removes all the items/elements on the list.
		myList.clear();
		
//		Prints an empty pair of box braces after removing all the items/
//		elements inside of the list.
//		[]
		System.out.println(myList);
		
//		Adds an item/element at a specified index position/location [0].
		myList.add(0, "First");
		myList.add("Third");
//		Adds another item/element at a specified index position/location [1].
		myList.add(1, "Second");
		myList.add("Third");
//		Adds the third item/element at a specified index position/location [2].
		myList.add(2, "Third");
		
//		For this case, the item/element will be inserted to the specified
//		index position/location [0]. The existing item on the index position
//		and the rest to its right, will be moved one place further.
		myList.add(0, "Forth");
		myList.add("Third");
		
//		By displaying, the "Forth" item will now be printed first and all the
//		items has moved one place to its right.
//		[Forth, First, Second, Third]
		System.out.println(myList);
		
//		Prints the size or number of elements inside of the list.
//		4
		System.out.println(myList.size());
		
//		Prints either "true" or "false" depending if the given value
//		is found inside of the list.
//		true
		System.out.println(myList.contains("Third"));
		
//		Prints the 
		System.out.println(myList.indexOf("Third"));
	}
}